@import 'reset.css';
@import 'setup.css';

:root {
	--neutral-0: 		#FFFFFF;
	--neutral-20:		#FAFAFA;
	--neutral-30:		#F7F7F7;
	--neutral-50:		#F2F2F2;
	--neutral-100:		#E5E5E5;
	--neutral-200: 	#CCCCCC;
	--neutral-300: 	#B2B2B2;
	--neutral-400: 	#999999;
	--neutral-500:		#808080;
	--neutral-600:		#666666;
	--neutral-700:		#4D4D4D;
	--neutral-800:		#333333;
	--neutral-900:		#1A1A1A;
	--neutral-1000:	#000000;

	
	/* MONOCHROME COLORS */
	--bg-1: var(--neutral-0);
	--bg-2: var(--neutral-50);
	--ink: var(--neutral-1000);
	--border: var(--neutral-600);
	--drop-shadow: var(--neutral-400);
	--word-tile: var(--neutral-50);
	--word-tile-selected: var(--neutral-600);
	--word-tile-selected-text: var(--neutral-100);
	--button-1-bg: var(--neutral-0);
	--button-2-bg: var(--neutral-200);
	--option-bg: var(--neutral-0);
	--option-selected-bg: var(--neutral-200);
	--panel-bg: var(--neutral-50);
	--subdued-ink: var(--neutral-500);

	--color-transition: .2s;
	--slider-width: 1.5rem;


	--word-list-gap: 12px;
	--border-radius-small: 5px;
	--box-shadow-small: 5px 5px var(--drop-shadow);
	--box-shadow-big: 10px 10px var(--drop-shadow);


	/* --inner-column: 900px; */

}

body.serious.light{
	--bg-1: #EEE8D5;
	--bg-2: #FAF5E5;
	--middle-tone: #94A1A1;
	--subdued-ink: #586E75;
	--ink: #073643;

	--topbar-text: var(--ink);
	--topbar-text: var(--subdued-ink);
	--slider: var(--bg-1);
	--slider-bg: var(--bg-2);

	--border: var(--ink);
	--drop-shadow: var(--middle-tone);
	--word-sections-text: var(--ink);
	--word-tile: var(--bg-2);
	--word-tile-text: var(--ink);
	--word-tile-selected: var(--ink);
	--word-tile-selected-text: var(--bg-2);
	/* --button-1 Generate button */
	--button-1-bg: var(--bg-2);
	--button-1-text: var(--ink);
	/* --button-2 Reset button */
	--button-2-bg: var(--subdued-ink);
	--button-2-text: var(--bg-1);
	--option-bg: var(--bg-2);
	--option-text: var(--ink);
	--option-selected-bg: var(--ink);
	--option-selected-text: var(--bg-2);
	--checkmark-bg: var(--bg-2);
	--panel-bg: var(--bg-2);
	--bookmark-label: var(--subdued-ink);
	--bookmark-bg: var(--middle-tone);
	--bookmark-active-bg: var(--ink);
	
	

	--box-shadow-small: 5px 5px var(--drop-shadow);
	--box-shadow-big: 10px 10px var(--drop-shadow);
}

body.serious.dark{
	--bg-1: #002B37;
	--bg-2: #083F4E;
	--middle-tone: #586E75;
	--subdued-ink: #94A1A1;
	--ink: #FDF6E3;
	--accent: #6C71C4;

	--topbar-text: var(--ink);
	--topbar-text: var(--subdued-ink);
	--slider: var(--bg-1);
	--slider-bg: var(--bg-2);

	--border: var(--middle-tone);
	--drop-shadow: var(--middle-tone);
	--word-sections-text: var(--ink);
	--word-tile: var(--bg-2);
	--word-tile-text: var(--ink);
	--word-tile-selected: var(--ink);
	--word-tile-selected-text: var(--bg-2);
	/* --button-1 Generate button */
	--button-1-bg: var(--accent);
	--button-1-text: var(--ink);
	/* --button-2 Reset button */
	--button-2-bg: var(--subdued-ink);
	--button-2-text: var(--bg-1);
	--option-bg: var(--bg-1);
	--option-text: var(--ink);
	--option-selected-bg: var(--accent);
	--option-selected-text: var(--ink);
	--input-field: var(--bg-1);
	--checkmark-bg: var(--bg-1);
	--panel-bg: var(--bg-1);
	--bookmark-label: var(--subdued-ink);
	--bookmark-bg: var(--bg-1);
	--bookmark-active-bg: var(--accent);

	--box-shadow-small: 5px 5px var(--drop-shadow);
	--box-shadow-big: 10px 10px var(--drop-shadow);
}

body.cute.light{
	--bg-1: #FDF7E7;
	--bg-2: #F7EBE4;
	--middle-tone: #E7C2AC;
	--subdued-ink: #3F5A62;
	--ink: #002B37;
	--accent: #FFED94;

	--topbar-text: var(--ink);
	--topbar-text: var(--subdued-ink);
	--slider: var(--bg-1);
	--slider-bg: var(--bg-2);

	--border: var(--ink);
	--drop-shadow: var(--middle-tone);
	--word-sections-text: var(--ink);
	--word-tile: var(--bg-2);
	--word-tile-text: var(--ink);
	--word-tile-selected: var(--accent);
	--word-tile-selected-text: var(--ink);
	/* --button-1 Generate button */
	--button-1-bg: var(--accent);
	--button-1-text: var(--ink);
	/* --button-2 Reset button */
	--button-2-bg: var(--bg-1);
	--button-2-text: var(--subdued-ink);
	--option-bg: var(--bg-1);
	--option-text: var(--ink);
	--option-selected-bg: var(--accent);
	--option-selected-text: var(--ink);
	--input-field: var(--bg-1);
	--checkmark-bg: var(--bg-1);
	--panel-bg: var(--bg-2);
	--bookmark-label: var(--subdued-ink);
	--bookmark-bg: var(--bg-2);
	--bookmark-active-bg: var(--accent);

	--box-shadow-small: 5px 5px var(--drop-shadow);
	--box-shadow-big: 10px 10px var(--drop-shadow);

	#reset {
		border: 1px solid var(--subdued-ink);
	}
}

body.cute.dark{
	--bg-1: #506CE1;
	--bg-2: #E0E1F7;
	--subdued-ink: #637BE4;
	--ink: #2C4FDB;
	--accent: #F9D383;

	--topbar-text: var(--bg-2);
	--slider: var(--bg-1);
	--slider-bg: var(--bg-2);

	--border: var(--ink);
	--drop-shadow: var(--ink);
	--word-sections-text: var(--bg-2);
	--word-tile: var(--bg-2);
	--word-tile-text: var(--ink);
	--word-tile-selected: var(--accent);
	--word-tile-selected-text: var(--ink);
	/* --button-1 Generate button */
	--button-1-bg: var(--accent);
	--button-1-text: var(--ink);
	/* --button-2 Reset button */
	--button-2-bg: var(--bg-2);
	--button-2-text: var(--subdued-ink);
	--option-bg: var(--bg-2);
	--option-text: var(--ink);
	--option-selected-bg: var(--ink);
	--option-selected-text: var(--bg-2);
	--input-field: var(--bg-2);
	--checkmark-bg: var(--bg-2);
	--panel-bg: var(--bg-2);
	--bookmark-label: var(--subdued-ink);
	--bookmark-bg: var(--bg-2);
	--bookmark-active-bg: var(--accent);

	--box-shadow-small: 5px 5px var(--drop-shadow);
	--box-shadow-big: 10px 10px var(--drop-shadow);

	#reset {
		box-shadow: 5px 5px var(--subdued-ink);
		border: 1px solid var(--subdued-ink);
	}
}

body {
	background-color: var(--bg-2);
	font-family: "Roboto Mono", monospace;
	height: 100vh;
	display: flex;
	flex-direction: column;
	color: var(--ink);
	transition: background-color var(--color-transition), color var(--color-transition);
}

inner-column {
	/* max-width: var(--inner-column); */
	max-width: 100%;
	margin-inline: auto;
	padding-inline: 10px;
}

header {
	/* padding-block: 0rem; */
	.topbar {
		background-color: var(--bg-1);
		padding-block: .5rem;
		color: var(--topbar-text);
		transition: background-color var(--color-transition), color var(--color-transition);

		.option-sliders {
			display: flex;
			justify-content: space-between;
			/* align-items: center; */
			font-size: .8rem;

			.option-slider {
				display: flex;
				align-items: center;
				gap: 8px;

				.switch-container {
					display: inline-block;
					height: calc(var(--slider-width) + 8px);
					width: calc(var(--slider-width) * 2 + 8px);
					position: relative;
				 }
				 
				 .switch-container input {
					display:none;
				 }
				 
				 .slider {
					background-color: var(--slider-bg);
					bottom: 0;
					cursor: pointer;
					left: 0;
					position: absolute;
					right: 0;
					top: 0;
					transition: background-color var(--color-transition), all .4s;
				 }
				 
				 .slider:before {
					background-color: var(--slider);
					bottom: 4px;
					content: "";
					height: var(--slider-width);
					aspect-ratio: 1/1;
					left: 4px;
					position: absolute;
					transition: .4s;
				 }
				 
				 input:checked + .slider {
					background-color: var(--);
				 }
				 
				 input:checked + .slider:before {
					transform: translateX(100%);
				 }
				 
				 .slider.round {
					border-radius: 34px;
				 }
				 
				 .slider.round:before {
					border-radius: 50%;
				 }
			}

			
		}
	}

	.title {
		padding-block: 3rem;

		.title-word-cursor-container {
			position: relative;
			
			.cursor {
				display: inline-block;
				position: absolute;
				bottom: 0;
				width: .6em;
				min-height: 2px;
				background-color: var(--ink);
				opacity: .3;
				animation: blink 1s step-start infinite;
				transition: none;
			}

			

			
	
			
		}
	}
}

@keyframes blink {
	50% {
		opacity: 0;
	}
}

main {
	flex-grow: 2;
}

form {
	/* max-width: 600px;
	margin-inline: auto; */


	padding-top: 1.5rem;

	.checkmark {
		stroke: blue;
	}

	.options {
		legend {
			margin-bottom: 1rem;
		}

		display: flex;
		justify-content: space-between;
		flex-wrap: wrap;
		gap: 12px;

		label {
			flex-grow: 2;
			display: flex;
			justify-content: center;
			border: 1px solid var(--border);
			border-radius: 30px;
			padding: 11.5px 20px;
			background-color: var(--option-bg);
			color: var(--option-text);
			transition: background-color var(--color-transition), color var(--color-transition), border var(--color-transition);
			position: relative;

			input {
				all: unset;
			}

			&:has(input:checked) {
				background-color: var(--option-selected-bg);
				color: var(--option-selected-text);
				transition: background-color var(--color-transition), color var(--color-transition);
			}

			&:has(input[type="checkbox"]:checked) {

				&::before {
					/* content: url(../images/checkmark.svg); */
					/* instead of SVG, just use font... */
					content: 'âœ“';
					font-family: sans-serif;
					font-weight: 100;
					font-size: .7rem;
					color: var(--ink);

					/* trying mask solution for changing stroke color */
					/* but it doesn't let you set a background on this pseudo-element, separately */
					/* -webkit-mask: url(../images/checkmark.svg);
					mask: url(../images/checkmark.svg);
					-webkit-mask-size: cover;
					background: red;
  					mask-size: cover; */
				
					display: flex;
					justify-content: center;
					align-items: center;
					width: 8px;
					position: absolute;
					right: 0px;
					bottom: 0px;
					width: 16px;
					height: 16px;
					background-color: var(--checkmark-bg);
					border-radius: 50%;
					border: 1px solid var(--border);
					transition: background-color var(--color-transition), color var(--color-transition), border var(--color-transition);
					
				}
			}


			/* &:hover {
				background-color: var(--option-selected-bg);
			} */
		}
		
		/* this de-selects other checkboxes while hovering */
		/* &:has(label:hover) label:not(:hover) {
			background-color: var(--option-bg);
		} */
	}


	#filters {
		padding-top: 2rem; 

		summary {
			list-style: none;
			display: flex;
			gap: .5rem;
			align-items: center;
			cursor: pointer;
		}
		summary::-webkit-details-marker {
			display: none;
		}

		

		/* summary::after {
			content: url(../images/option-arrow.svg);
			padding-left: .5rem;
			transform: rotate(0);
			transform-origin: .2rem 50%;
			transition: .25s transform ease
		} */

		.option-arrow-svg {
			/* border: 2px solid red; */
			width: fit-content;
			transform: rotate(0);
			transition: .25s transform ease;

			path {
				stroke: var(--ink);
				transition: stroke var(--color-transition);
			}
		}
		

		fieldset {
			margin-top: 1.5rem;
		}

	}
	#filters[open] .option-arrow-svg {
		transform: rotate(90deg);
	}

	.min-max {
		display: flex;
		justify-content: space-between;
		legend {
			margin-bottom: 1rem;
		}
		.number-input {
			display: flex;
			align-items: flex-end;
			gap: 10px;

			.crement {
				all: unset;
				width: 44px;
				height: 44px;
				border: 1px solid var(--border);
				border-radius: var(--border-radius-small);
				background-color: var(--option-bg);
				color: var(--option-text);
				transition: background-color var(--color-transition), color var(--color-transition), border var(--color-transition);

				display: flex;
				justify-content: center;
				align-items: center;

				svg path {
					stroke: var(--ink);
					transition: stroke var(--color-transition);
				}

				&:hover {
					background-color: var(--option-selected-bg);
					color: var(--option-selected-text);
					transition: background-color var(--color-transition), color var(--color-transition);
				}
			}
			label {
				display: flex;
				flex-direction: column;
				align-items: center;
				gap: .5rem;
				input {
					all: unset;
					background-color: var(--input-field);
					font-family: "Roboto Mono", monospace;
					text-align: center;
					border: 1px solid var(--border);
					height: 44px;
					width: 44px; 
					border-radius: var(--border-radius-small);
					transition: background-color var(--color-transition), border var(--color-transition);
				}

				/* Chrome, Safari, Edge, Opera */
				input::-webkit-outer-spin-button,
				input::-webkit-inner-spin-button {
					-webkit-appearance: none;
					margin: 0;
				}

				/* Firefox */
				input[type=number] {
					appearance: textfield;
					-moz-appearance: textfield;
				}
			}
		}
	}

	.buttons {
		margin-block: 3rem;
		display: flex;
		justify-content: space-between;
		gap: 1.5rem;
		font-size: 1.25rem;

		#generate {
			flex-grow: 2;
		}

		
		#generate {
			background-color: var(--button-1-bg);
			color: var(--button-1-text);
		}
		#reset {

			background-color: var(--button-2-bg);
			color: var(--button-2-text);
		
		}

		#reset:hover {
			transform: translate(5px, 5px);
			box-shadow: 0 0 var(--drop-shadow);
			/* background-color: var(--border); */
		}
	}
}

button {
	all: unset;
	font-family: inherit;
	font-weight: 600;
	border: 1px solid var(--border);
	box-shadow: var(--box-shadow-small);
	padding-block: 11px;
	padding-inline: 22px;
	display: flex;
	justify-content: center;
	border-radius: var(--border-radius-small);
	background-color: var(--button-2-bg);
	color: var(--button-2-text);
	transition: background-color var(--color-transition), color var(--color-transition), box-shadow var(--color-transition), transform var(--color-transition);



	&:hover {
		transform: translate(5px, 5px);
		box-shadow: 0 0 var(--drop-shadow);
		/* background-color: var(--option-selected-bg); */
		/* color: var(--bg-2); */
		/* font-weight: 900; */
		/* letter-spacing: 3px; */
	}

}

#results{
	padding-bottom: 8rem;
}

.word-sections {
	color: var(--word-sections-text);
	z-index: 2;
	border-radius: 20px;
	padding-block: 3rem;
	background-color: var(--bg-1);
	visibility: visible;
	/* this is for the transition as it appears */
	transition: transform .3s ease-out, visibilty 0s, background-color var(--color-transition), color var(--color-transition);
}
#saved-words.empty{
	/* visibility: hidden; */
	/* display: none; */
	/* this is for the transition as it disappears */
	/* transition: transform 1s ease-in 1s, visibility 0s linear 3s; */
	
}
#generated-words.empty{
	/* this is for the transition as it disappears */
	/* transition: transform 1s ease-in .5s, visibility 0s linear 3s; */
	/* visibility: hidden; */
}
.word-sections + .word-sections {
	margin-top: 3rem;
}


word-list {
	margin-block: 3rem;
	display: flex;
	flex-wrap: wrap;
	gap: var(--word-list-gap);
	position: relative;

	word-tile {
		background-color: var(--word-tile);
		color: var(--word-tile-text);
		padding: 10px;
		border-radius: var(--border-radius-small);
		opacity: 1;
		transition: opacity 1s;
		transition: background-color var(--color-transition), color var(--color-transition);

		&:hover {
			background-color: var(--word-tile-selected);
			color: var(--word-tile-selected-text);
			transition: background-color var(--color-transition), color var(--color-transition);
		}
	}
	word-tile.selected {
		background-color: var(--word-tile-selected);
		color: var(--word-tile-selected-text);
		transition: background-color var(--color-transition), color var(--color-transition);
	}
	word-tile.removed{
		opacity: 0;
	}
}

definition-panel {
	display: none;
	position: absolute;

	width: min(400px, 90%);
	max-height: 400px;
  
	overflow-y: scroll;

	z-index: 8;
	
	background-color: var(--panel-bg);
	color: var(--ink);
	border: 1px solid var(--border);
	border-radius: var(--border-radius-small);

	padding-inline: 12px;
	padding-top: 15px;
	padding-bottom: 64px;

	box-shadow: var(--box-shadow-big);
	transition: box-shadox var(--color-transition), color var(--color-transition), background-color, var(--color-transition);


	h3 {
		padding: 1rem;
	}

	.tools {
		display: flex;
		justify-content: space-between;

		
		.x-out-div {
			cursor: pointer;
			height: 30px;
			width: 30px;
			.x-out-path{
				stroke: var(--border);
				transition: stroke var(--color-transition);

			}

		}
		.bookmark {
			display: flex;
		
			.bookmark-svg {
				min-width: 31px;
				fill: var(--bookmark-bg);
				stroke: var(--border);
				transition: .2s;
				transition: fill var(--color-transition), stroke var(--color-transition);

			}

			&.active .bookmark-svg {
				fill: var(--bookmark-active-bg);
				transition: fill var(--color-transition);
			}

			&.active::before{
				content: "Saved";
				padding-right: 10px;
				color: var(--bookmark-label);
				transition: color var(--color-transition);
			}

			&:hover {
				.bookmark-svg {
					fill: var(--bookmark-active-bg);
					transition: fill var(--color-transition);
				}

				&::before {
					content: "Save?";
					padding-right: 10px;
					color: var(--bookmark-label);
					transition: color var(--color-transition);
				}
			}
			&.active:hover {
				/* .bookmark-svg {
					fill: var(--bg-2);
				} */

				&::before {
					content: "Remove?";
					padding-right: 10px;
				}
			}
		}
	}

	.definitions {
		list-style: decimal;
		list-style-type: decimal;
		padding-left: 1.8rem;
		line-height: 1.4;
		
		li + li {
			margin-top: 1rem;
		}
		
		p + p {
			margin-top: .5rem;
		}
	}

	&.active {
		display: block;
	}
}

#saved-words {
	.upper-part {
		display: flex;
		align-items: center;
		justify-content: space-between;
		

		.tools {
			font-size: 1rem;
			display: flex;
			gap: 1.5rem;
			justify-content: flex-end;
			padding-right: 5px;

			#clear-saved-words{
				background-color: var(--button-2-bg);
				color: var(--button-2-text);
				/* transition: background-color var(--color-transition), color var(--color-transition); */
			}
			#copy-saved-words {
				background-color: var(--button-1-bg);
				color: var(--button-1-text);
				/* transition: background-color var(--color-transition), color var(--color-transition); */
			}
			
			button {
				padding-inline: 11px;
			}
		}
	}
}




/* TYPOGRAPHY */

.title {
	font-size: 1.5rem;
	font-weight: 600;
}

.attention-voice {
	font-weight: 600;
}

.loud-voice {
	font-size: 1.5rem;
	font-weight: 600;
}


/* BREAKPOINTS */

/* if you change this min-width, also change wideBreakPoint in the <details> <script> */
@media (min-width: 1020px) {

	:root {
		--wide-margin: 1rem;
	}

	body {
		display: grid;
		/* TODO: this could be fine-tuned a little better */
		
		max-width: 2000;
		/* disgustingly complicated */
		/* The gist is: left-column starts at 400, gains 50% of all width after 1020, maxes out at 600, right column attempts to account for all the difference */
		/* right column math: */
		/* minmax( min: (get the width of main which is either 100vw or max-width) - grid_gap - twice_the_wide_margins - value_of_left_column) */
		grid-template-columns:
			min(calc(400px + (100vw - 1020px) * .5), 600px)
			calc(min(100vw, 2000px) - min(3vw, 6rem) - min(calc(400px + (100vw - 1020px) * .5), 600px));
		grid-template-rows: min-content auto;
		column-gap: min(3vw, 6rem);
		margin-inline: auto;
	}

	inner-column {
		padding-inline: 0;
	}
	header {
		grid-column: 1 / span 2;
		height: min-content;
		
		/* display: grid;
		grid-template-columns: subgrid;
		
		inner-column {
			width: 100%;
		} */

		.topbar {
			padding-inline: var(--wide-margin);
		}

		.title {
			padding-left: var(--wide-margin);
		}
	}


	main{
		grid-row: 2;
		grid-column: 1 / span 2;
		display: grid;
		grid-template-columns: subgrid;
		overflow-y: hidden;
		overflow-x: visible;
	}

	form {
		grid-column: 1;
		padding-left: var(--wide-margin);
		padding-right: 5px;
		height: 100%;
		overflow-y: scroll;
		

	}


	#results {
		grid-column: 2;
		width: 100%;
		padding-right: var(--wide-margin);
		padding-bottom: 5rem;
		overflow: scroll;

		inner-column{
			padding-inline: 2rem;
		}
		
	}

	/* #saved-words.empty{
		transform: translateY(+100vh);

		
	}
	#generated-words.empty{
		transform: translateY(-100vh);

	} */

}


@media (min-width: 2000px) {
	body {
		
		max-width: 3600px;
		/* disgustingly complicated */
		/* The gist is: left-column starts at 400, gains 50% of all width after 1020, maxes out at 600, right column attempts to account for all the difference */
		/* right column math: */
		/* minmax( min: (get the width of main which is either 100vw or max-width) - grid_gap - twice_the_wide_margins - value_of_left_column) */
		grid-template-columns:
			.2fr 400px 1fr 1fr .2fr;
	}

	header {
		grid-column: 1 / span 5;
		display: grid;
		grid-template-columns: subgrid;

		inner-column {
			grid-column: 1 / span 5;
			display: grid;
			grid-template-columns: subgrid;

			.title {
				grid-column: 2;
			}
		}
		

		.topbar {
			grid-column: 1 / span 5;
			display: grid;
			grid-template-columns: subgrid;

			inner-column {
				grid-column: 1 / span 5;
				display: grid;
				grid-template-columns: subgrid;

				.option-sliders {
					grid-column: 1 / span 5;
					display: grid;
					grid-template-columns: subgrid;

					.option-slider:first-child {
						grid-column: 2;
					}
					.option-slider:last-child {
						grid-column: 4;
						justify-self: end;
					}
				}
			}

		}
	}

	main {
		grid-column: 2 / span 3;
	}

	form {
		grid-column: 1
	}

	#results {
		grid-column: 2 / span 2;
		display: grid;
		grid-template-columns: subgrid;

		#generated-words {
			
			grid-column: 1 / span 1;
		}

		#saved-words {
			grid-column: 3 / span 1;
		}

		.word-sections {
			max-width: 30vw;
			height: 75%;
		}

		.word-sections + .word-sections {
			margin-top: 0rem;
		}
	}


}

